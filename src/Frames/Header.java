package Frames;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Image;
import java.net.URL;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

import Frames.my.MyFont;
import Frames.my.MyLabel;
import Frames.my.MyPanel;

public class Header extends MyPanel {

    private Frame parentFrame; // Tham chi·∫øu ƒë·∫øn frame cha ƒë·ªÉ x·ª≠ l√Ω ƒëƒÉng xu·∫•t
    private String adminID;
    public Header(String title, Frame parentFrame, String adminID) {
        super(1080, 50, Color.WHITE);
        this.parentFrame = parentFrame;
        this.adminID = adminID;
        this.setLayout(new BorderLayout()); // S·ª≠ d·ª•ng BorderLayout ƒë·ªÉ chia header th√†nh c√°c v√πng

        addLogo();
        addTitle(title);
        addUserMenu();
    }

    // public Header(Frame parentFrame) {
    //     this("Student Management System", parentFrame);
    // }

    private void addLogo() {
        try {
            // T·∫£i logo t·ª´ URL v√† ch·ªânh k√≠ch th∆∞·ªõc
            URL logoUrl = new URL("https://dhs.ptit.edu.vn/web/image/385-67ae5bc7/Logo_PTIT_University.png");
            ImageIcon logoIcon = new ImageIcon(
                new ImageIcon(logoUrl).getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH)
            );
            JLabel logoLabel = new JLabel(logoIcon);

            JPanel logoPanel = new JPanel(new BorderLayout());
            logoPanel.setBackground(Color.WHITE);
            logoPanel.setBorder(new EmptyBorder(0, 20, 0, 0)); 
            logoPanel.add(logoLabel, BorderLayout.CENTER);

            this.add(logoPanel, BorderLayout.WEST);
        } catch (Exception e) {
            e.printStackTrace();

            JLabel errorLabel = new JLabel("Logo not available");
            errorLabel.setForeground(Color.RED);

            JPanel logoPanel = new JPanel(new BorderLayout());
            logoPanel.setBackground(Color.WHITE);
            logoPanel.setBorder(new EmptyBorder(0, 20, 0, 0)); // Padding tr√°i 20px
            logoPanel.add(errorLabel, BorderLayout.CENTER);

            this.add(logoPanel, BorderLayout.WEST);
        }
    }

    private void addTitle(String title) {
        MyLabel titleLabel = new MyLabel(title, new MyFont(Font.BOLD, 24), Color.BLACK);
        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
        this.add(titleLabel, BorderLayout.CENTER);
    }

    private void addUserMenu() {
        // T·∫°o n√∫t ng∆∞·ªùi d√πng
        JButton userButton = new JButton("üë®");
        userButton.setBackground(Color.WHITE);
        userButton.setBorder(BorderFactory.createEmptyBorder()); // Lo·∫°i b·ªè vi·ªÅn n√∫t
        userButton.setFocusPainted(true);
    
        // T·∫°o menu popup
        JPopupMenu userMenu = new JPopupMenu();
        JMenuItem editInfo = new JMenuItem("S·ª≠a th√¥ng tin");
        JMenuItem logout = new JMenuItem("ƒêƒÉng xu·∫•t");
    
        // X·ª≠ l√Ω s·ª± ki·ªán cho c√°c m·ª•c menu
        editInfo.addActionListener(e -> updatePersonalInfo());
        logout.addActionListener(e -> {
            JOptionPane.showMessageDialog(this, "ƒêƒÉng xu·∫•t th√†nh c√¥ng!");
            if (parentFrame != null) {
                parentFrame.dispose(); // ƒê√≥ng frame cha
                // Kh·ªüi t·∫°o form ƒëƒÉng nh·∫≠p
                new LoginForm();
            }
        });
    
        // Th√™m c√°c m·ª•c v√†o menu
        userMenu.add(editInfo);
        userMenu.add(logout);
    
        // Hi·ªÉn th·ªã menu khi b·∫•m v√†o n√∫t
        userButton.addActionListener(e -> {
            // Show the menu at the left of the button (x = button's x - menu's width, y = button's y + button's height)
            userMenu.show(userButton, -userMenu.getPreferredSize().width, userButton.getHeight());
        });
    
        // ƒê·∫∑t n√∫t v√†o g√≥c ph·∫£i
        JPanel userPanel = new JPanel(new BorderLayout());
        userPanel.setBackground(Color.WHITE);
        userPanel.setBorder(new EmptyBorder(0, 0, 0, 20)); // Padding ph·∫£i 20px
        userPanel.add(userButton, BorderLayout.CENTER);
    
        this.add(userPanel, BorderLayout.EAST);
    }
    

    private void updatePersonalInfo() {
        // // T·∫°o c√°c tr∆∞·ªùng nh·∫≠p th√¥ng tin
        // JTextField nameField = new JTextField(admin.getName());
        // JTextField emailField = new JTextField(admin.getEmail());
        // JTextField phoneField = new JTextField(admin.getPhone());
        // SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        // String formattedDate = dateFormat.format(admin.getBirthDate());

        // JTextField dobField = new JTextField(formattedDate);

        // Object[] message = {
        //     "T√™n:", nameField,
        //     "Email:", emailField,
        //     "S·ªë ƒëi·ªán tho·∫°i:", phoneField,
        //     "Ng√†y sinh (dd/MM/yyyy):", dobField,
        // };

        // int option = JOptionPane.showConfirmDialog(
        //     this,
        //     message,
        //     "C·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n",
        //     JOptionPane.OK_CANCEL_OPTION
        // );

        // if (option == JOptionPane.OK_OPTION) {
        //     String name = nameField.getText();
        //     String email = emailField.getText();
        //     String phone = phoneField.getText();
        //     String dobText = dobField.getText();

        //     if (name.isEmpty() || email.isEmpty() || phone.isEmpty() || dobText.isEmpty()) {
        //         JOptionPane.showMessageDialog(this, "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!", "L·ªói", JOptionPane.ERROR_MESSAGE);
        //     } else {
        //         try {
        //             dateFormat.setLenient(false); // ƒê·∫£m b·∫£o ki·ªÉm tra ch·∫∑t ch·∫Ω ƒë·ªãnh d·∫°ng
        //             Date dob = dateFormat.parse(dobText);

        //             JOptionPane.showMessageDialog(this, "Th√¥ng tin c√° nh√¢n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng!");
        //             admin.setName(name);
        //             admin.setEmail(email);
        //             admin.setPhone(phone);
        //             admin.setBirthDate(dob);
        //             System.out.println(admin.getName());
        //         } catch (Exception e) {
        //             JOptionPane.showMessageDialog(
        //                 this,
        //                 "ƒê·ªãnh d·∫°ng ng√†y sinh kh√¥ng h·ª£p l·ªá. Vui l√≤ng s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng dd/MM/yyyy",
        //                 "L·ªói",
        //                 JOptionPane.ERROR_MESSAGE
        //             );
        //         }
        //     }
        // }
    }
}